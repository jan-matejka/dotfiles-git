[user]
    name  = yac
    email = yac@blesmrt.net

[color]
    status = auto
    diff   = auto
    branch = auto

[alias]
    a          = add
    autosquash = rebase --autosquash
    b          = branch
    bb         = branch-backup
    che        = cherry-pick

    ci         = commit
    cia        = commit --amend --no-edit

    cl         = clone
    co         = checkout
    cn         = config

    d          = diff
    dc         = diff --cached

    lg         = log --show-signature --show-notes=* --stat --graph --color --abbrev-commit --decorate=full --pretty=fuller -50

    # one line pr commit. Usefull to line count (wc -l)
    lgo        = log --oneline --decorate

    # log minimal
    lgm        = log  --stat --pretty=format:"%H"

    # show remotes with their urls
    r          = remote -v

    # prevent stupid rebases
    pull       = pull --ff-only

    # cleanup build artifacts.
    # ``git welp -x`` when updating .gitignore.
    welp       = clean -fd

    # prune no-longer valid remote refs to prevent misleading decorations
    # in git-log and tracking branches that no longer exist.
    f          = fetch -p

    s          = status

    # show comitter and commit date as well as author
    sh         = show --pretty=fuller

    t          = tag
    psh        = push

    # show tracking branch
    bt = "!git branch --list -vv $(git rev-parse --abbrev-ref HEAD)"

    # commit amend everything and force push. Usefull in some stupid
    # environments
    cip = "!git commit -a --amend --no-edit; git push -f"


    # chop n last commits from branch or just the HEAD if n not given.
    chop = "!f() { ch=1; [ $# = 1 ] && ch=$1; git reset --hard HEAD~$ch; }; f";
    ch = "!git chop"

    # chop & pull; counter-part to git-cip
    chpl = "!git chop && git pull"
# }}}

[push]
    default = tracking

[transfer]
    fsckObjects = true

[sendemail]
    assume8bitEncoding = true
